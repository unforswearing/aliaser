#!/bin/bash

aliaser() {
  IFS=$'\n\t'

  helpp () {
    cat <<EOF
aliaser <option> [alias name]

options:
  -h|help         display this help message
  -o|open         open the alias file with the default gui editor (e.g. TextEdit)
  -l|list         list aliases saved in alias file
  -e|edit         edit alias file in $EDITOR
  -r|rm           remove alias from alias file
  -d|dir          create an alias from the current directory (alias name is basename)
  -n|name         create an alias from the current directory with a user defined name
  -s|search       search alias file and execute selection
  -a|searchall    search all aliases system wide and execute selection
  -c|command      create an alias from the previous command with a user defined name

examples:
  aliaser rm "aliasname"      remove alias named "aliasname" from alias file
  aliaser -n "favoritedir"    add an alias for the current directory named
                              "favoritedir" to alias file

be sure to source the alias file in your .bashrc or .bash_profile

EOF

  }

  # https://github.com/gko/listbox
  listbox() {
    while [[ $# -gt 0 ]]
    do
      key="$1"

      case $key in
        -o|--options)
          local OIFS=$IFS;
          IFS="|";
          # check if zsh/bash
          if [ -n "$ZSH_VERSION" ]; then
            IFS=$'\n' opts=("$(echo "$2" | tr "|" "\n")")
          else
            IFS="|" read -r -a opts <<< "$2";
          fi
          IFS=$OIFS;
          shift
          ;;
        -t|--title)
          local title="$2"
          shift
          ;;
        -r|--result)
          local __result="$2"
          shift
          ;;
        -a|--arrow)
          local arrow="$2"
          shift
          ;;
        *)
      esac
      shift
    done

    if [[ -z $arrow ]]; then
      arrow=">"
    fi

    local len=${#opts[@]}

    local choice=0
    local titleLen=${#title}

    if [[ -n "$title" ]]; then
      echo -e "\n  $title"
      printf "  "
      printf %"$titleLen"s | tr " " "-"
      echo ""
    fi

    draw() {
      local idx=0
      for it in "${opts[@]}"
      do
        local str="";
        if [ $idx -eq $choice ]; then
          str+="$arrow "
        else
          str+="  "
        fi
        echo "$str$it"
        idx=$((idx+1))
      done
    }

    move() {
      for it in "${opts[@]}"
      do
        tput cuu1
      done
      tput el1
    }

    listen() {
      while true
      do
        key=$(bash -c "read -n 1 -s key; echo \$key")

        if [[ $key = q ]]; then
          break
        elif [[ $key = B ]]; then
          if [ $choice -lt $((len-1)) ]; then
            choice=$((choice+1))
            move
            draw
          fi
        elif [[ $key = A ]]; then
          if [ $choice -gt 0 ]; then
            choice=$((choice-1))
            move
            draw
          fi
        elif [[ $key = "" ]]; then
          # check if zsh/bash
          if [ -n "$ZSH_VERSION" ]; then
            choice=$((choice+1))
          fi

          if [[ -n $__result ]]; then
            eval "$__result=\"${opts[$choice]}\""
          else
            echo -e "\n${opts[$choice]}"
          fi
          break
        fi
      done
    }

    draw
    listen
  }

  ########################################
  config="${HOME}/.aliaser/aliaser.conf"
  ########################################

  # see issue: https://github.com/unforswearing/aliaser/issues/4
  if [[ ! -f "$config" ]]; then
    read -r -p "Enter the path to your alias file: " aliasfile
    echo "alias_file=$aliasfile" > "$config"
    echo "$aliasfile set as alias file."
  fi

  file=$(awk -F '=' '{print $2}' "$config")
  filedir=$(dirname "$file")
  filename=$(basename "$file")

  _open() {
    if [[ $(uname -s) == "Linux" ]]; then 
      open="$(command -v xdg-open)";
    else 
      open="$(command -v open)";
    fi

    find "$filedir/" -type f -name "$filename" -exec "$open" {} +
    echo "Opening $file"
  }

  _list() {
    # cat "$file"
    echo "Printing aliases"
    sleep .2
    find "$filedir/" -type f -name "$filename" -exec cat {} +;
  }

  _edit() {
    find "$filedir/" -type f -name "$filename" -exec "$EDITOR" {} +
  }

  _remove() {
    grep -iv "$2" "$file" > .arm.tmp
    cat .arm.tmp > "$file"
    rm .arm.tmp

    unalias "$2"

    echo "Removed $2 from aliases"
  }

  _dir() {
    local name
    local dir

    name=$(basename "$(pwd)")
    dir=$(pwd|sed 's/ /\\ /')

    printf "alias %s='cd %s'" "${name}" "${dir}" >> "$file";
    printf '\n' >> "$file"
    echo "Alias for $dir added to $file"
  }

  _named() {
      echo "alias $2='cd $(pwd)'" >> "$file"
      printf '\n' >> "$file"
      echo "Alias for $2 created for $(pwd)"
  }

  _search() {
    if [[ "$1" == "-a" ]] || [[ "$1" == "searchall" ]]; then
      unset file;
      alias > ~/.aliaser/aliaserall.tmp
      file=~/.aliaser/aliaserall.tmp
    fi

    if [[ "$2" == "" ]]; then
      printf "aliaser search needs an alias name to search for";

    else
      local srch="$2"

      # unused for now choosefromlist seems to work on home laptop
      listresults() {
        echo "Search results for \"$srch\":"
        echo "-------------------------------"
        grep -i "$srch" $file
        echo

      }

      choosefromlist() {
        results() {
          grep -i "$srch" "$file" | sed "s/\#.*//g" | \
            grep -v '^$' | tr '\n' '\|'

        }

        if [[ $(command -v fzf) ]]; then
          comm="$(results "$@" | tr '\|' '\n' | fzf)"
        else
          listbox -t "Search results for \"$srch\"" \
            -o "$(results "$@")CANCEL SEARCH" -r comm -a "â‡¨"
        fi
        
        comm="${comm}"

        local toexec; toexec=$(
          echo "$comm" | \
          awk -F '=' '{print $2}' | \
          sed "s/'//g" | \
          sed "s|~|/Users/$(whoami)|g"
        );

        local trigger; trigger="$(echo "$toexec" | awk -F ' ' '{print $1}')"
        local directory; directory="${toexec//cd /}"

        if [[ $trigger == "cd" ]]; then
          # navigating to a directory works ONLY on home laptop
          { pushd "${directory}" > /dev/null 2>&1; } || \
            echo "unable to navigate to ${directory}"
        else
          # executing commands does work
          eval "$toexec"
        fi
      }

      choosefromlist "$@"
    fi
  }

  _command() {
    # printf '\n' >> "$file"
    _cralias=$(
      history | tail -n 2 | sort -r | tail -n 1 | awk '{first=$1; $1=""; print $0; }' | sed 's/^ //g'
    )

    [[ $(printf _cralias) =~ \' ]]  && \
      echo "alias $2=\"$_cralias\"" >> "$file" || \
      echo "alias $2='$_cralias'" >> "$file"

    echo "alias $2 created for \"$_cralias\""
  }

  case "$1" in
    -h|--help|help|"") helpp  ;;
    -o|open) _open ;;
    -l|ls|list) _list ;;
    -e|edit) _edit ;;
    -r|rm|remove) _remove "$@" ;;
    -d|wd|dir) _dir ;;
    -n|name) _named "$@" ;;
    -s|search) _search "$@" ;;
    -a|searchall) _search "$@" ;;
    -c|command) _command "$@" ;;
  esac

  source "$file"
}
